{"version":3,"sources":["App.js","index.js"],"names":["App","useState","loading","setLoading","eachPerson","setEachPerson","title","setTitle","value","setValue","fetchData","a","fetch","response","json","data","console","log","results","person","name","first","last","email","age","dob","location","street","number","phone","password","login","large","picture","newPerson","image","useEffect","handleChange","e","currentTarget","dataset","label","eachValue","className","src","alt","data-label","onMouseOver","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNA8FeA,MAjFf,WAAe,MAEiBC,oBAAS,GAF1B,mBAENC,EAFM,KAEGC,EAFH,OAGsBF,mBAAS,IAH/B,mBAGNG,EAHM,KAGKC,EAHL,OAIYJ,mBAAS,QAJrB,mBAINK,EAJM,KAIAC,EAJA,OAKYN,mBAAS,IALrB,mBAKNO,EALM,KAKAC,EALA,KAQPC,EAAS,uCAAG,wDAAAC,EAAA,6DAChBR,GAAW,GADK,SAEOS,MAbf,8BAWQ,cAEVC,EAFU,gBAGGA,EAASC,OAHZ,OAGVC,EAHU,OAIhBC,QAAQC,IAAIF,EAAKG,QAAQ,IACnBC,EAASJ,EAAKG,QAAQ,GALZ,EAOKC,EAAOC,KAArBC,EAPS,EAOTA,MAAMC,EAPG,EAOHA,KACNC,EAASJ,EAATI,MACAC,EAAOL,EAAOM,IAAdD,IATS,EAUOL,EAAOO,SAASC,OAAhCC,EAVS,EAUTA,OAAQR,EAVC,EAUDA,KAERS,EAASV,EAATU,MACAC,EAAYX,EAAOY,MAAnBD,SACAE,EAASb,EAAOc,QAAhBD,MAGHE,EAAY,CAChBC,MAAMH,EACNZ,KAAK,GAAD,OAAKC,EAAL,YAAcC,GAClBC,MAAOA,EACPC,IAAKA,EACLG,OAAO,GAAD,OAAKC,EAAL,YAAeR,GACrBS,MAAOA,EACPC,SAASA,GAEX3B,GAAW,GACXE,EAAc6B,GACd3B,EAAS,QACTE,EAASyB,EAAUd,MA7BD,4CAAH,qDAiCfgB,qBAAU,WACR1B,MACA,IAEF,IAAM2B,EAAe,SAACC,GAEpBtB,QAAQC,IAAIqB,EAAEC,cAAcC,QAAQC,OACpC,IAAMC,EAAYJ,EAAEC,cAAcC,QAAQC,MAC1ClC,EAASmC,GACT1B,QAAQC,IAAIb,EAAWsC,IACvBjC,EAASL,EAAWsC,KAItB,OACE,8BACE,yBAAKC,UAAU,oBACf,yBAAKA,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKC,IAAMxC,EAAW+B,OA9DX,iDA8DkCU,IAAI,cAAcF,UAAU,aACzE,uBAAGA,UAAU,cAAb,MAA8BrC,EAA9B,OACA,uBAAGqC,UAAU,cAAcnC,GAE3B,yBAAKmC,UAAU,eACb,4BAAQA,UAAU,OAAOG,aAAW,OAAOC,YAAaV,GAAc,kBAAC,IAAD,OACtE,4BAAQM,UAAU,OAAOG,aAAW,QAAQC,YAAaV,GAAc,kBAAC,IAAD,OACvE,4BAAQM,UAAU,OAAOG,aAAW,MAAMC,YAAaV,GAAc,kBAAC,IAAD,OACrE,4BAAQM,UAAU,OAAOG,aAAW,SAASC,YAAaV,GAAc,kBAAC,IAAD,OACxE,4BAAQM,UAAU,OAAOG,aAAW,QAAQC,YAAaV,GAAc,kBAAC,IAAD,OACvE,4BAAQM,UAAU,OAAOG,aAAW,WAAWC,YAAaV,GAAc,kBAAC,IAAD,QAI5E,4BAAQM,UAAU,MAAMK,KAAK,MAAMC,QAASvC,GAAYR,EAAU,UAAY,mBClFxFgD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.993e7a64.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n//import icons from react-icons\r\nimport {\r\n  FaUser,\r\n  FaEnvelopeOpen,\r\n  FaCalendarTimes,\r\n  FaMap,\r\n  FaPhone,\r\n  FaLock,\r\n} from 'react-icons/fa'\r\nconst url = 'https://randomuser.me/api/'  //this is the format of the api\r\nconst defaultImage = 'https://randomuser.me/api/portraits/men/75.jpg'   //this image is used by default (image not being empty)\r\n\r\nfunction App() {\r\n  //states\r\n  const [loading, setLoading] = useState(true)   //when click on \"random user\" button the button says loading\r\n  const [eachPerson,setEachPerson] = useState(\"\")  //nothing to show by default\r\n  const [title,setTitle] = useState('name')  //by default when the page loads it shows name of the person as title\r\n  const [value,setValue] = useState('')  //value is name,email,age,address,phone and password\r\n\r\n  //fetch function\r\n  const fetchData = async() =>{\r\n    setLoading(true)   //loading state is true before fetch begins\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    console.log(data.results[0])\r\n    const person = data.results[0]\r\n    //we don't need to map since we have one json template format \r\n    const {first,last} = person.name\r\n    const {email} = person\r\n    const {age} = person.dob\r\n    const {number, name} = person.location.street\r\n    //or  const {street:{number, name}} = person.location\r\n    const {phone} = person\r\n    const {password} = person.login\r\n    const {large} = person.picture\r\n \r\n  //define the new features\r\n  const newPerson = {\r\n    image:large,\r\n    name: `${first} ${last}`,\r\n    email: email,\r\n    age: age,\r\n    street: `${number} ${name}`,\r\n    phone: phone,\r\n    password:password\r\n  }\r\n  setLoading(false)\r\n  setEachPerson(newPerson)  //pass the newPerson features to setEachPerson\r\n  setTitle('name')  //when image loads at first the title should be 'name'\r\n  setValue(newPerson.name)  //by default the name of the person shows at first\r\n}   \r\n\r\n  //call the fetchData function \r\n  useEffect(()=>{\r\n    fetchData()\r\n  },[])\r\n\r\n  const handleChange = (e) =>{\r\n    //dataset returns the data-* attributes on that element\r\n    console.log(e.currentTarget.dataset.label)   //or e.target.datset.label sometimes gives us undefined\r\n    const eachValue = e.currentTarget.dataset.label\r\n    setTitle(eachValue)\r\n    console.log(eachPerson[eachValue])\r\n    setValue(eachPerson[eachValue])\r\n  }\r\n\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"block bcg-black\"></div>\r\n      <div className='block'>\r\n        <div className='container'>\r\n          <img src={(eachPerson.image)|| defaultImage} alt=\"random user\" className='user-img'/>\r\n          <p className='user-title'>My {title} is</p>\r\n          <p className='user-value'>{value}</p>\r\n\r\n          <div className='values-list'>\r\n            <button className='icon' data-label='name' onMouseOver={handleChange}><FaUser /></button>\r\n            <button className='icon' data-label='email' onMouseOver={handleChange}><FaEnvelopeOpen /></button>\r\n            <button className='icon' data-label='age' onMouseOver={handleChange}><FaCalendarTimes /></button>\r\n            <button className='icon' data-label='street' onMouseOver={handleChange}><FaMap /></button>\r\n            <button className='icon' data-label='phone' onMouseOver={handleChange}><FaPhone /></button>\r\n            <button className='icon' data-label='password' onMouseOver={handleChange}><FaLock /></button>\r\n          </div>\r\n \r\n          {/* if we call fetchData with clicking on random button then it pickes random person every time */}\r\n          <button className='btn' type=\"btn\" onClick={fetchData}>{loading ? \"loading\" : \"random user\"}</button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}